"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/playground",{

/***/ "./components/IconCreater.js":
/*!***********************************!*\
  !*** ./components/IconCreater.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Points_Points__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Points/Points */ \"./components/Points/Points.js\");\n/* harmony import */ var svg_path_commander__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! svg-path-commander */ \"./node_modules/svg-path-commander/dist/svg-path-commander.mjs\");\n/* harmony import */ var three_examples_jsm_loaders_SVGLoader_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! three/examples/jsm/loaders/SVGLoader.js */ \"./node_modules/three/examples/jsm/loaders/SVGLoader.js\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/dist/react-redux.legacy-esm.js\");\n/* harmony import */ var svg_parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! svg-parser */ \"./node_modules/svg-parser/dist/svg-parser.esm.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var _utils_utils3d__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/utils3d */ \"./utils/utils3d.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\nconst IconCreater = (param)=>{\n    let { scene } = param;\n    _s();\n    const [positions, setPositions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const groupRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const positionsArrays = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const iconsUrls = (0,react_redux__WEBPACK_IMPORTED_MODULE_6__.useSelector)((state)=>state.shapes.iconsUrls);\n    //   const font = useLoader(FontLoader, './public/fonts/Montserrat Black_Italic.json');\n    // useEffect(() => {\n    //   if (url) {\n    //       fetch(url)\n    //       .then(response => response.text())\n    //       .then(svgString => {\n    //           const parsedSvg = parse(svgString);\n    //           // Now you can work with the parsed SVG\n    //           // console.log(parsedSvg)\n    //           const paths = parsedSvg.children[0].children.filter(child => child.tagName === 'path');\n    //           setPositions(createFloat32ArrayPositionsSvgPaths(paths))\n    //       });\n    //   }\n    //   return () => {\n    //   }\n    // }, [url])\n    // useEffect(() => {\n    //   console.log(file)\n    //   const reader = new FileReader();\n    //   reader.onloadend = () => {\n    //   const parsedSvg = parse(reader.result);\n    //   console.log(parsedSvg)\n    //   const paths = parsedSvg.children[0].children.filter(child => child.tagName === 'path');\n    //   console.log(paths);\n    //   setPositions(createFloat32ArrayPositionsSvgPaths(paths))\n    //   };\n    //   if (file) {\n    //    reader.readAsText(file);\n    //   }\n    //   return () => {\n    //   }\n    // }, [file])\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(iconsUrls);\n        if (iconsUrls.length > 0) loadIcon(iconsUrls[0]);\n        else setPositions(null);\n    }, [\n        iconsUrls\n    ]);\n    function mergeFloat32Arrays(arrays) {\n        let totalLength = arrays.reduce((acc, val)=>acc + val.length, 0);\n        let result = new Float32Array(totalLength);\n        let offset = 0;\n        for (let array of arrays){\n            result.set(array, offset);\n            offset += array.length;\n        }\n        return result;\n    }\n    const loadIcon = (iconUrl)=>{\n        const loader = new three_examples_jsm_loaders_SVGLoader_js__WEBPACK_IMPORTED_MODULE_7__.SVGLoader();\n        loader.load(// resource URL\n        iconUrl, // called when the resource is loaded\n        function(data) {\n            const paths = data.paths;\n            console.log({\n                paths\n            });\n            createPointsFromPaths(paths);\n            createModelFromPaths(paths);\n        }, // called when loading is in progresses\n        function(xhr) {\n            console.log(xhr.loaded / xhr.total * 100 + \"% loaded\");\n        }, // called when loading has errors\n        function(error) {\n            console.log(\"An error happened\", error);\n        });\n    };\n    const createFloat32ArrayPositionsSvgPaths = (paths)=>{\n        // console.log(paths)\n        // console.log(shapes[selectedShape])\n        const pointsArray = [];\n        paths.forEach((path)=>{\n            const p = path.properties.d;\n            // console.log(p)\n            const normalizedPath = svg_path_commander__WEBPACK_IMPORTED_MODULE_3__[\"default\"].normalizePath(p);\n            //remove first element of array\n            // console.log(normalizedPath)\n            normalizedPath.forEach((stroke)=>{\n                stroke.shift();\n                // console.log(stroke)\n                for(let index = 0; index < stroke.length; index++){\n                    pointsArray.push(stroke[index]);\n                    if (index % 2 !== 0) {\n                        pointsArray.push(0);\n                    }\n                }\n            });\n        // const transform = {\n        //     translate: [15, 15, 15], // `[15, 15]` would apply a 2D translation, and only `15` for X axis translation\n        //     rotate: [15, 15, 15], // or only \"15\" for 2D rotation on Z axis\n        //     scale: [0.7, 0.75, 0.8], // or only \"0.7\" for 2D scale on all X, Y, Z axis\n        //     skew: [15, 15], // or only \"15\" for the X axis\n        //     origin: [15, 15, 15] // full `transform-origin` for a typical 3D transformation\n        // }\n        // const transformed3DPathString = new SVGPathCommander(normalizedPath).transform(transform);\n        // console.log(transformed3DPathString)\n        });\n        // console.log(pointsArray)\n        const normalizedArray = (0,_utils_utils3d__WEBPACK_IMPORTED_MODULE_5__.normalize)(pointsArray);\n        const float32Array = new Float32Array(normalizedArray);\n        return float32Array;\n    };\n    const createPointsFromShape = (shape)=>{\n        if (shape.curves.length > 0) {\n            positionsArrays.current.push(createPointsFromCurves(shape.curves, 30));\n        }\n        if (shape.holes.length > 0) {\n            shape.holes.forEach((hole, index)=>{\n                positionsArrays.current.push(createPointsFromCurves(hole.curves, 30));\n            });\n        }\n    };\n    const createModelFromPaths = (paths)=>{\n        const group = new three__WEBPACK_IMPORTED_MODULE_8__.Group();\n        // console.log(positionsArrays.current);\n        scene.add(group);\n        for(let i = 0; i < paths.length; i++){\n            const path = paths[i];\n            const material = new three__WEBPACK_IMPORTED_MODULE_8__.MeshBasicMaterial({\n                color: path.color,\n                side: three__WEBPACK_IMPORTED_MODULE_8__.DoubleSide,\n                depthWrite: false\n            });\n            const shapes = three_examples_jsm_loaders_SVGLoader_js__WEBPACK_IMPORTED_MODULE_7__.SVGLoader.createShapes(path);\n            // console.log({ shapes });\n            for(let j = 0; j < shapes.length; j++){\n                const shape = shapes[j];\n                // createPointsFromShape(shape);\n                const geometry = new three__WEBPACK_IMPORTED_MODULE_8__.ShapeGeometry(shape);\n                const { min, max } = (0,_utils_utils3d__WEBPACK_IMPORTED_MODULE_5__.getMinMax)(geometry.attributes.position.array);\n                geometry.attributes.position.array = (0,_utils_utils3d__WEBPACK_IMPORTED_MODULE_5__.normalize)(geometry.attributes.position.array, min, max);\n                // positionsArrays.current.push(geometry.attributes.position.array)\n                const mesh = new three__WEBPACK_IMPORTED_MODULE_8__.Mesh(geometry, material);\n                group.add(mesh);\n            }\n        }\n        group.position.x = 2;\n        groupRef.current = group;\n    };\n    const createPointsFromPaths = (paths)=>{\n        console.log({\n            paths\n        });\n        for(let i = 0; i < paths.length; i++){\n            const path = paths[i];\n            positionsArrays.current.push(createPointsFromCurves(path.currentPath.curves, 30));\n            path.subPaths.forEach((subPath)=>{\n                positionsArrays.current.push(createPointsFromCurves(subPath.curves, 30));\n            });\n        }\n        const merged = mergeFloat32Arrays(positionsArrays.current);\n        const { min, max } = (0,_utils_utils3d__WEBPACK_IMPORTED_MODULE_5__.getMinMax)(merged);\n        const normalizedArray = (0,_utils_utils3d__WEBPACK_IMPORTED_MODULE_5__.normalize)(merged, min, max);\n        // console.log(merged)\n        setPositions(normalizedArray);\n    };\n    const createPointsFromCurves = (curves, divisions)=>{\n        const points = [];\n        curves.forEach((curve)=>{\n            const pointsFromCurve = createPointsFromCurve(curve, divisions);\n            points.push(...pointsFromCurve);\n        });\n        return points;\n    };\n    const createPointsFromCurve = function(curve) {\n        let divisions = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n        const points = [];\n        for(let i = 0; i < divisions; i++){\n            const point = curve.getPoint(i / divisions);\n            points.push(point.x, point.y, 0);\n        }\n        return points;\n    };\n    // console.log(positions)\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: positions && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Points_Points__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n            positions: positions\n        }, void 0, false, {\n            fileName: \"C:\\\\Projects\\\\Ticketing\\\\client\\\\components\\\\IconCreater.js\",\n            lineNumber: 229,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false);\n};\n_s(IconCreater, \"b7tuASPRJzUuoS777AL5BJeWmqI=\", false, function() {\n    return [\n        react_redux__WEBPACK_IMPORTED_MODULE_6__.useSelector\n    ];\n});\n_c = IconCreater;\n/* harmony default export */ __webpack_exports__[\"default\"] = (IconCreater);\nvar _c;\n$RefreshReg$(_c, \"IconCreater\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/IconCreater.js\n"));

/***/ })

});